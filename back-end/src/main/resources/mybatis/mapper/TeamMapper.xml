<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.health.dao.TeamRepository">

    <!-- 팀 목록 조회 -->
    <select id="getAllTeams" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT team_id AS teamId,
               user_id AS userId,
               sport_type AS sportType,
               description,
               max_members AS maxMembers,
               current_members AS currentMembers,
               created_at AS createdAt
        FROM teams
    </select>

    <!-- 팀 생성 -->
    <insert id="createTeam" parameterType="com.ssafy.health.dto.request.TeamRequest">
        INSERT INTO teams (user_id, sport_type, description, max_members, current_members, created_at)
        VALUES (#{userId}, #{sportType}, #{description}, #{maxMembers}, 0, NOW())
    </insert>

    <!-- 새로 생성된 팀 조회 -->
    <select id="selectLatestTeam" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT team_id AS teamId,
               user_id AS userId,
               sport_type AS sportType,
               description,
               max_members AS maxMembers,
               current_members AS currentMembers,
               created_at AS createdAt
        FROM teams
        ORDER BY created_at DESC
            LIMIT 1
    </select>

    <!-- 특정 팀 조회 -->
    <select id="getTeamById" parameterType="long" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT team_id AS teamId,
               user_id AS userId,
               sport_type AS sportType,
               description,
               max_members AS maxMembers,
               current_members AS currentMembers,
               created_at AS createdAt
        FROM teams
        WHERE team_id = #{id}
    </select>

    <!-- 팀 정보 업데이트 -->
    <update id="updateTeam" parameterType="com.ssafy.health.dto.request.TeamRequest">
        UPDATE teams
        SET sport_type = #{sportType},
            description = #{description},
            max_members = #{maxMembers}
        WHERE team_id = #{id}
    </update>

    <!-- 팀 삭제 -->
    <delete id="deleteTeam" parameterType="long">
        DELETE FROM teams WHERE team_id = #{id}
    </delete>

</mapper>
