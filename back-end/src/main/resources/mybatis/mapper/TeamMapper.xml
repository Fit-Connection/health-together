<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.health.dao.TeamRepository">

    <!-- 팀 목록 조회 -->
    <select id="getAllTeams" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT
            t.team_id AS teamId,
            t.writer_id AS writerId,
            u.username AS writerName,
            t.team_name AS teamName,
            t.sport_type AS sportType,
            t.description AS description,
            t.max_members AS maxMembers,
            t.current_members AS currentMembers,
            t.facility_id AS facilityId,
            f.name AS facilityName,
            f.type AS facilityType,
            f.contact AS facilityContact,
            fl.latitude AS facilityLatitude,
            fl.longitude AS facilityLongitude,
            t.meeting_date AS meetingDate,
            t.fee AS fee,
            t.age_limit AS ageLimit,
            t.preparing AS preparing,
            t.rule AS rule,
            t.invitations AS invitations,
            t.created_at AS createdAt,
            t.updated_at AS updatedAt,
            t.is_active AS isActive
        FROM
            teams t
                LEFT JOIN users u ON t.writer_id = u.user_id
                LEFT JOIN facilities f ON t.facility_id = f.facility_id
                LEFT JOIN facilities_locations fl ON f.facility_id = fl.facility_id
        WHERE t.is_active = TRUE
        ORDER BY t.created_at DESC;
    </select>

    <!-- 팀 생성 -->
    <insert id="createTeam" parameterType="com.ssafy.health.domain.Team">
        INSERT INTO teams (
            writer_id, team_name, sport_type, description, max_members,
            current_members, facility_id, meeting_date, fee, age_limit,
            preparing, rule, invitations, is_active, created_at, updated_at
        )
        VALUES (
                   #{writerId}, #{teamName}, #{sportType}, #{description}, #{maxMembers},
                   0, #{facilityId}, #{meetingDate}, #{fee}, #{ageLimit},
                   #{preparing}, #{rule}, #{invitations}, #{isActive}, NOW(), NOW()
               );
    </insert>

    <!-- 새로 생성된 팀 조회 -->
    <select id="selectLatestTeam" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT
            t.team_id AS teamId,
            t.writer_id AS writerId,
            u.username AS writerName,
            t.team_name AS teamName,
            t.sport_type AS sportType,
            t.description AS description,
            t.max_members AS maxMembers,
            t.current_members AS currentMembers,
            t.facility_id AS facilityId,
            f.name AS facilityName,
            f.type AS facilityType,
            f.contact AS facilityContact,
            fl.latitude AS facilityLatitude,
            fl.longitude AS facilityLongitude,
            t.meeting_date AS meetingDate,
            t.fee AS fee,
            t.age_limit AS ageLimit,
            t.preparing AS preparing,
            t.rule AS rule,
            t.invitations AS invitations,
            t.created_at AS createdAt,
            t.updated_at AS updatedAt,
            t.is_active AS isActive
        FROM
            teams t
                LEFT JOIN users u ON t.writer_id = u.user_id
                LEFT JOIN facilities f ON t.facility_id = f.facility_id
                LEFT JOIN facilities_locations fl ON f.facility_id = fl.facility_id
        ORDER BY t.created_at DESC
            LIMIT 1;
    </select>

    <!-- 특정 팀 조회 -->
    <select id="getTeamById" parameterType="long" resultType="com.ssafy.health.dto.response.TeamResponse">
        SELECT
            t.team_id AS teamId,
            t.writer_id AS writerId,
            u.username AS writerName,
            t.team_name AS teamName,
            t.sport_type AS sportType,
            t.description AS description,
            t.max_members AS maxMembers,
            t.current_members AS currentMembers,
            t.facility_id AS facilityId,
            f.name AS facilityName,
            f.type AS facilityType,
            f.contact AS facilityContact,
            fl.latitude AS facilityLatitude,
            fl.longitude AS facilityLongitude,
            t.meeting_date AS meetingDate,
            t.fee AS fee,
            t.age_limit AS ageLimit,
            t.preparing AS preparing,
            t.rule AS rule,
            t.invitations AS invitations,
            t.created_at AS createdAt,
            t.updated_at AS updatedAt,
            t.is_active AS isActive
        FROM
            teams t
                LEFT JOIN users u ON t.writer_id = u.user_id
                LEFT JOIN facilities f ON t.facility_id = f.facility_id
                LEFT JOIN facilities_locations fl ON f.facility_id = fl.facility_id
        WHERE
            t.team_id = #{id};
    </select>

    <!-- 팀 정보 업데이트 -->
    <update id="updateTeam" parameterType="com.ssafy.health.dto.request.TeamRequest">
        UPDATE teams
        SET
            team_name = #{teamName},
            sport_type = #{sportType},
            description = #{description},
            max_members = #{maxMembers},
            facility_id = #{facilityId},
            meeting_date = #{meetingDate},
            fee = #{fee},
            age_limit = #{ageLimit},
            preparing = #{preparing},
            rule = #{rule},
            invitations = #{invitations},
            is_active = #{isActive},
            updated_at = NOW()
        WHERE
            team_id = #{teamId};
    </update>

    <!-- 팀 삭제 -->
    <delete id="deleteTeam" parameterType="long">
        DELETE FROM teams WHERE team_id = #{id};
    </delete>

</mapper>
